{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Workspace\\\\FormWithReact\\\\react-frontend\\\\src\\\\userList\\\\userList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Table } from \"antd\";\nimport { useHistory } from \"react-router-dom\"; // Import useHistory từ react-router-dom\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllUser = () => {\n  _s();\n  const [dataSource, setDataSource] = useState([]);\n  const history = useHistory(); // Khởi tạo useHistory\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    // Lấy dữ liệu từ API hoặc từ nguồn khác\n  };\n  const handleAddClick = () => {\n    // Chuyển hướng sang trang thêm người dùng khi nhấn vào nút \"Add\"\n    history.push(\"/add-user\"); // Thay đổi \"/add-user\" thành đường dẫn tương ứng của trang bạn muốn chuyển hướng\n  };\n  const handleEditClick = user => {\n    // Chuyển hướng sang trang chỉnh sửa người dùng khi nhấn vào nút \"Edit\"\n    history.push(`/edit-user/${user.id}`); // Thay đổi \"/edit-user/:id\" thành đường dẫn tương ứng của trang bạn muốn chuyển hướng, và truyền id của user cần chỉnh sửa\n  };\n  const deleteUser = async id => {\n    // Xóa người dùng và cập nhật dataSource (không cần chuyển hướng)\n    // await sendDelete(\"deleteProduct\", { id });\n    // const newDataSource = dataSource.filter((item) => item.id !== id);\n    // setDataSource(newDataSource);\n  };\n  const columns = [\n  // Các cột của bảng\n  {\n    title: \"UserName\",\n    dataIndex: \"userName\",\n    key: \"userName\"\n  }, {\n    title: \"Password\",\n    dataIndex: \"password\",\n    key: \"password\"\n  }, {\n    title: \"Note\",\n    dataIndex: \"note\",\n    key: \"note\"\n  }, {\n    title: \"Radio\",\n    dataIndex: \"radio\",\n    key: \"radio\"\n  }, {\n    title: \"Switch\",\n    dataIndex: \"switchForm\",\n    key: \"switchForm\" // Đổi key từ \"switch\" thành \"switchForm\" để tránh xung đột với từ khóa \"switch\" của JavaScript\n  }, {\n    title: \"Remember Me\",\n    dataIndex: \"rememberMe\",\n    key: \"rememberMe\"\n  }, {\n    title: \"Select Option\",\n    dataIndex: \"selectOption\",\n    key: \"selectOption\"\n  }, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleEditClick(record),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => deleteUser(record.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-add\",\n      onClick: handleAddClick,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(AllUser, \"n1RwHWH4HLvYPsppGZvY2ZwT8bc=\", false, function () {\n  return [useHistory];\n});\n_c = AllUser;\nexport default AllUser;\nvar _c;\n$RefreshReg$(_c, \"AllUser\");","map":{"version":3,"names":["React","useEffect","useState","Button","Table","useHistory","jsxDEV","_jsxDEV","AllUser","_s","dataSource","setDataSource","history","fetchData","handleAddClick","push","handleEditClick","user","id","deleteUser","columns","title","dataIndex","key","render","text","record","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/Code/Workspace/FormWithReact/react-frontend/src/userList/userList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Table } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\"; // Import useHistory từ react-router-dom\r\n\r\nconst AllUser = () => {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const history = useHistory(); // Khởi tạo useHistory\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    // Lấy dữ liệu từ API hoặc từ nguồn khác\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    // Chuyển hướng sang trang thêm người dùng khi nhấn vào nút \"Add\"\r\n    history.push(\"/add-user\"); // Thay đổi \"/add-user\" thành đường dẫn tương ứng của trang bạn muốn chuyển hướng\r\n  };\r\n\r\n  const handleEditClick = (user : any) => {\r\n    // Chuyển hướng sang trang chỉnh sửa người dùng khi nhấn vào nút \"Edit\"\r\n    history.push(`/edit-user/${user.id}`); // Thay đổi \"/edit-user/:id\" thành đường dẫn tương ứng của trang bạn muốn chuyển hướng, và truyền id của user cần chỉnh sửa\r\n  };\r\n\r\n  const deleteUser = async (id : any) => {\r\n    // Xóa người dùng và cập nhật dataSource (không cần chuyển hướng)\r\n    // await sendDelete(\"deleteProduct\", { id });\r\n    // const newDataSource = dataSource.filter((item) => item.id !== id);\r\n    // setDataSource(newDataSource);\r\n  };\r\n\r\n  const columns = [\r\n    // Các cột của bảng\r\n    {\r\n      title: \"UserName\",\r\n      dataIndex: \"userName\",\r\n      key: \"userName\",\r\n    },\r\n    {\r\n      title: \"Password\",\r\n      dataIndex: \"password\",\r\n      key: \"password\",\r\n    },\r\n    {\r\n      title: \"Note\",\r\n      dataIndex: \"note\",\r\n      key: \"note\",\r\n    },\r\n    {\r\n      title: \"Radio\",\r\n      dataIndex: \"radio\",\r\n      key: \"radio\",\r\n    },\r\n    {\r\n      title: \"Switch\",\r\n      dataIndex: \"switchForm\",\r\n      key: \"switchForm\", // Đổi key từ \"switch\" thành \"switchForm\" để tránh xung đột với từ khóa \"switch\" của JavaScript\r\n    },\r\n    {\r\n      title: \"Remember Me\",\r\n      dataIndex: \"rememberMe\",\r\n      key: \"rememberMe\",\r\n    },\r\n    {\r\n      title: \"Select Option\",\r\n      dataIndex: \"selectOption\",\r\n      key: \"selectOption\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text : any, record : any) => (\r\n        <span>\r\n          <Button onClick={() => handleEditClick(record)}>Edit</Button>\r\n          <Button onClick={() => deleteUser(record.id)}>Delete</Button>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Table dataSource={dataSource} columns={columns} />\r\n      <Button className=\"btn-add\" onClick={handleAddClick}>\r\n        Add\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllUser;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AACpC,SAASC,UAAU,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMU,OAAO,GAAGP,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE9BJ,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B;EAAA,CACD;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACAF,OAAO,CAACG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,eAAe,GAAIC,IAAU,IAAK;IACtC;IACAL,OAAO,CAACG,IAAI,CAAE,cAAaE,IAAI,CAACC,EAAG,EAAC,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOD,EAAQ,IAAK;IACrC;IACA;IACA;IACA;EAAA,CACD;EAED,MAAME,OAAO,GAAG;EACd;EACA;IACEC,KAAK,EAAE,UAAU;IACjBC,SAAS,EAAE,UAAU;IACrBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,UAAU;IACjBC,SAAS,EAAE,UAAU;IACrBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,MAAM;IACjBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,YAAY;IACvBC,GAAG,EAAE,YAAY,CAAE;EACrB,CAAC,EACD;IACEF,KAAK,EAAE,aAAa;IACpBC,SAAS,EAAE,YAAY;IACvBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,eAAe;IACtBC,SAAS,EAAE,cAAc;IACzBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,QAAQ;IACfE,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAEA,CAACC,IAAU,EAAEC,MAAY,kBAC/BnB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA,CAACJ,MAAM;QAACyB,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAACU,MAAM,CAAE;QAAAC,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7DzB,OAAA,CAACJ,MAAM;QAACyB,OAAO,EAAEA,CAAA,KAAMT,UAAU,CAACO,MAAM,CAACR,EAAE,CAAE;QAAAS,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD;EAEV,CAAC,CACF;EAED,oBACEzB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACH,KAAK;MAACM,UAAU,EAAEA,UAAW;MAACU,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDzB,OAAA,CAACJ,MAAM;MAAC8B,SAAS,EAAC,SAAS;MAACL,OAAO,EAAEd,cAAe;MAAAa,QAAA,EAAC;IAErD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtFID,OAAO;EAAA,QAEKH,UAAU;AAAA;AAAA6B,EAAA,GAFtB1B,OAAO;AAwFb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}