{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Workspace\\\\FormWithReact\\\\react-frontend\\\\src\\\\userList\\\\userList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Table } from \"antd\";\nimport { sendDelete, sendGet } from \"../api\";\n// import { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllUser = () => {\n  _s();\n  const [dataSource, setDataSource] = useState([]);\n  //   const history = useNavigate(); // Khởi tạo useHistory\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await sendGet('findAllEmployees');\n        setDataSource(data);\n      } catch (error) {\n        // Exeption\n      }\n    };\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    // Lấy dữ liệu từ API hoặc từ nguồn khác\n  };\n  const handleAddClick = () => {\n    // Chuyển hướng sang trang thêm người dùng khi nhấn vào nút \"Add\"\n    // history(\"/add-user\"); // Thay đổi \"/add-user\" thành đường dẫn tương ứng của trang bạn muốn chuyển hướng\n  };\n  const handleEditClick = user => {\n    // Chuyển hướng sang trang chỉnh sửa người dùng khi nhấn vào nút \"Edit\"\n    // history(`/edit-user/${user.id}`); // Thay đổi \"/edit-user/:id\" thành đường dẫn tương ứng của trang bạn muốn chuyển hướng, và truyền id của user cần chỉnh sửa\n  };\n  const deleteUser = async id => {\n    // Xóa người dùng và cập nhật dataSource (không cần chuyển hướng)\n    console.log(await sendDelete(\"deleteEmployees/${id}\"));\n\n    // await sendDelete(\"deleteEmployees/${id}\");\n    // const newDataSource = dataSource.filter((item) => item.id !== id);\n    // setDataSource(newDataSource);\n  };\n  const columns = [\n  // Các cột của bảng\n  {\n    title: \"Id\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"UserName\",\n    dataIndex: \"userName\",\n    key: \"userName\"\n  }, {\n    title: \"Password\",\n    dataIndex: \"password\",\n    key: \"password\"\n  }, {\n    title: \"Note\",\n    dataIndex: \"note\",\n    key: \"note\"\n  }, {\n    title: \"Radio\",\n    dataIndex: \"radioSelection\",\n    key: \"Radio Selection\"\n  }, {\n    title: \"Switch Mode\",\n    dataIndex: \"switchMode\",\n    key: \"switchMode\",\n    render: switchValue => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: switchValue ? \"On\" : \"Off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }, this)\n  }, {\n    title: \"Remember Me\",\n    dataIndex: \"rememberMe\",\n    key: \"rememberMe\",\n    render: rememberValue => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: rememberValue ? \"True\" : \"False\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }, this)\n  }, {\n    title: \"Dropdown\",\n    dataIndex: \"dropdownOption\",\n    key: \"dropdownOption\"\n  }, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleEditClick(record),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => deleteUser(record.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-add\",\n      onClick: handleAddClick,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(AllUser, \"pu9n7TwnPAxDTWSarNwXzEh5CRk=\");\n_c = AllUser;\nexport default AllUser;\nvar _c;\n$RefreshReg$(_c, \"AllUser\");","map":{"version":3,"names":["React","useEffect","useState","Button","Table","sendDelete","sendGet","jsxDEV","_jsxDEV","AllUser","_s","dataSource","setDataSource","fetchData","data","error","handleAddClick","handleEditClick","user","deleteUser","id","console","log","columns","title","dataIndex","key","render","switchValue","children","fileName","_jsxFileName","lineNumber","columnNumber","rememberValue","text","record","onClick","className","_c","$RefreshReg$"],"sources":["D:/Code/Workspace/FormWithReact/react-frontend/src/userList/userList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Table } from \"antd\";\r\nimport { sendDelete, sendGet } from \"../api\";\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nconst AllUser = () => {\r\n    const [dataSource, setDataSource] = useState<any[]>([]);\r\n    //   const history = useNavigate(); // Khởi tạo useHistory\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await sendGet('findAllEmployees');\r\n                setDataSource(data);\r\n            } catch (error) {\r\n                // Exeption\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        // Lấy dữ liệu từ API hoặc từ nguồn khác\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        // Chuyển hướng sang trang thêm người dùng khi nhấn vào nút \"Add\"\r\n        // history(\"/add-user\"); // Thay đổi \"/add-user\" thành đường dẫn tương ứng của trang bạn muốn chuyển hướng\r\n    };\r\n\r\n    const handleEditClick = (user: any) => {\r\n        // Chuyển hướng sang trang chỉnh sửa người dùng khi nhấn vào nút \"Edit\"\r\n        // history(`/edit-user/${user.id}`); // Thay đổi \"/edit-user/:id\" thành đường dẫn tương ứng của trang bạn muốn chuyển hướng, và truyền id của user cần chỉnh sửa\r\n    };\r\n\r\n    const deleteUser = async (id: BigInteger) => {\r\n        // Xóa người dùng và cập nhật dataSource (không cần chuyển hướng)\r\n        console.log(await sendDelete(\"deleteEmployees/${id}\"));\r\n        \r\n        // await sendDelete(\"deleteEmployees/${id}\");\r\n        // const newDataSource = dataSource.filter((item) => item.id !== id);\r\n        // setDataSource(newDataSource);\r\n    };\r\n\r\n    const columns = [\r\n        // Các cột của bảng\r\n        {\r\n            title: \"Id\",\r\n            dataIndex: \"id\",\r\n            key: \"id\",\r\n        },\r\n        {\r\n            title: \"UserName\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n        },\r\n        {\r\n            title: \"Password\",\r\n            dataIndex: \"password\",\r\n            key: \"password\",\r\n        },\r\n        {\r\n            title: \"Note\",\r\n            dataIndex: \"note\",\r\n            key: \"note\",\r\n        },\r\n        {\r\n            title: \"Radio\",\r\n            dataIndex: \"radioSelection\",\r\n            key: \"Radio Selection\",\r\n        },\r\n        {\r\n            title: \"Switch Mode\",\r\n            dataIndex: \"switchMode\",\r\n            key: \"switchMode\",\r\n            render: (switchValue: boolean) => (\r\n              <span>{switchValue ? \"On\" : \"Off\"}</span>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Remember Me\",\r\n            dataIndex: \"rememberMe\",\r\n            key: \"rememberMe\",\r\n            render: (rememberValue: boolean) => (\r\n              <span>{rememberValue ? \"True\" : \"False\"}</span>\r\n            ),\r\n          },\r\n        {\r\n            title: \"Dropdown\",\r\n            dataIndex: \"dropdownOption\",\r\n            key: \"dropdownOption\",\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            key: \"action\",\r\n            render: (text: any, record: any) => (\r\n                <span>\r\n                    <Button onClick={() => handleEditClick(record)}>Edit</Button>\r\n                    <Button onClick={() => deleteUser(record.id)}>Delete</Button>\r\n                </span>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Table dataSource={dataSource} columns={columns} />\r\n            <Button className=\"btn-add\" onClick={handleAddClick}>\r\n                Add\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllUser;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}