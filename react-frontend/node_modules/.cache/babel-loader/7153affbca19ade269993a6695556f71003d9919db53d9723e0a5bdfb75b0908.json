{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Workspace\\\\FormWithReact\\\\react-frontend\\\\src\\\\component\\\\formCRUD\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Form, Input, Checkbox, Radio, Switch, Select, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { sendPost } from \"api\";\nimport \"./FormCRUD.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst FormCRUD = props => {\n  _s();\n  const {\n    isOpen,\n    setOpen,\n    setDataSource\n  } = props;\n  const [statusSwitch, setStatusSwitch] = useState(false);\n  const inputText = [{\n    label: \"Username\",\n    value: \"username\",\n    type: \"text\",\n    placeHolder: \"Enter username\",\n    error: \"You need to enter a username\"\n  }, {\n    label: \"Password\",\n    value: \"password\",\n    placeHolder: \"Enter password\",\n    type: \"password\",\n    note: \"Your password must be between 4 and 12 characters\",\n    error: \"You need to enter a password\"\n  }, {\n    label: \"Input Text Label\",\n    value: \"anything\",\n    type: \"text\",\n    placeHolder: \"Type here\",\n    error: \"You need to enter a Text Label\"\n  }];\n  const radioInput = [{\n    name: \"Radio selection 1\",\n    value: \"1\"\n  }, {\n    name: \"Radio selection 2\",\n    value: \"2\"\n  }, {\n    name: \"Radio selection 3\",\n    value: \"3\"\n  }];\n  const options = [\"Dropdown option\", \"Dropdown option 1\", \"Dropdown option 2\", \"Dropdown option 3\", \"Dropdown option 4\", \"Dropdown option 5\"];\n  const onFinish = async values => {\n    const submitData = {\n      userName: values.username,\n      password: values.password,\n      note: values.anything,\n      rememberMe: values.checkbox,\n      radio: values.radio,\n      switchForm: statusSwitch ? 1 : 0,\n      selectOption: values.selectBox\n    };\n    const res = await sendPost(`saveProduct`, submitData);\n    setDataSource(prevData => [...prevData, {\n      id: res.id,\n      ...submitData\n    }]);\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"model-custom\",\n    title: null,\n    visible: isOpen,\n    onCancel: () => setOpen(false),\n    footer: null,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onFinish,\n      className: \"form-container\",\n      children: [inputText.map(item => /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: item.value,\n        rules: [{\n          required: true,\n          message: item.error,\n          min: item.value === \"password\" ? 4 : undefined,\n          max: item.value === \"password\" ? 12 : undefined\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          prefix: item.value === \"password\" ? /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 51\n          }, this) : /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 70\n          }, this),\n          type: item.type,\n          placeholder: item.placeHolder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, item.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"checkbox\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"radio\",\n        initialValue: \"0\",\n        children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n          children: radioInput.map(item => /*#__PURE__*/_jsxDEV(Radio, {\n            value: item.value,\n            children: item.name\n          }, item.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"switch\",\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          onChange: () => setStatusSwitch(!statusSwitch)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: 8\n          },\n          children: statusSwitch ? \"On\" : \"Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"selectBox\",\n        initialValue: options[0],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(Option, {\n            value: option,\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-custom cancel\",\n          onClick: () => setOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-custom next\",\n          htmlType: \"submit\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(FormCRUD, \"kTjbS1s0kirP2bBGQNvAQB16Euw=\");\n_c = FormCRUD;\nexport default FormCRUD;\nvar _c;\n$RefreshReg$(_c, \"FormCRUD\");","map":{"version":3,"names":["React","useState","Modal","Form","Input","Checkbox","Radio","Switch","Select","Button","UserOutlined","LockOutlined","sendPost","jsxDEV","_jsxDEV","Option","FormCRUD","props","_s","isOpen","setOpen","setDataSource","statusSwitch","setStatusSwitch","inputText","label","value","type","placeHolder","error","note","radioInput","name","options","onFinish","values","submitData","userName","username","password","anything","rememberMe","checkbox","radio","switchForm","selectOption","selectBox","res","prevData","id","className","title","visible","onCancel","footer","children","map","item","Item","rules","required","message","min","undefined","max","prefix","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","valuePropName","initialValue","Group","onChange","style","marginLeft","option","index","onClick","htmlType","_c","$RefreshReg$"],"sources":["D:/Code/Workspace/FormWithReact/react-frontend/src/component/formCRUD/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Form, Input, Checkbox, Radio, Switch, Select, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { sendPost } from \"api\";\nimport \"./FormCRUD.css\";\n\nconst { Option } = Select;\n\nconst FormCRUD = (props: any) => {\n  const { isOpen, setOpen, setDataSource } = props;\n  const [statusSwitch, setStatusSwitch] = useState(false);\n\n  const inputText = [\n    {\n      label: \"Username\",\n      value: \"username\",\n      type: \"text\",\n      placeHolder: \"Enter username\",\n      error: \"You need to enter a username\",\n    },\n    {\n      label: \"Password\",\n      value: \"password\",\n      placeHolder: \"Enter password\",\n      type: \"password\",\n      note: \"Your password must be between 4 and 12 characters\",\n      error: \"You need to enter a password\",\n    },\n    {\n      label: \"Input Text Label\",\n      value: \"anything\",\n      type: \"text\",\n      placeHolder: \"Type here\",\n      error: \"You need to enter a Text Label\",\n    },\n  ];\n\n  const radioInput = [\n    { name: \"Radio selection 1\", value: \"1\" },\n    { name: \"Radio selection 2\", value: \"2\" },\n    { name: \"Radio selection 3\", value: \"3\" },\n  ];\n\n  const options = [\n    \"Dropdown option\",\n    \"Dropdown option 1\",\n    \"Dropdown option 2\",\n    \"Dropdown option 3\",\n    \"Dropdown option 4\",\n    \"Dropdown option 5\",\n  ];\n\n  const onFinish = async (values: any) => {\n    const submitData = {\n      userName: values.username,\n      password: values.password,\n      note: values.anything,\n      rememberMe: values.checkbox,\n      radio: values.radio,\n      switchForm: statusSwitch ? 1 : 0,\n      selectOption: values.selectBox,\n    };\n    const res = await sendPost(`saveProduct`, submitData);\n    setDataSource((prevData: any) => [\n      ...prevData,\n      { id: res.id, ...submitData },\n    ]);\n    setOpen(false);\n  };\n\n  return (\n    <Modal\n      className=\"model-custom\"\n      title={null}\n      visible={isOpen}\n      onCancel={() => setOpen(false)}\n      footer={null}\n    >\n      <Form onFinish={onFinish} className=\"form-container\">\n        {inputText.map((item) => (\n          <Form.Item\n            key={item.value}\n            name={item.value}\n            rules={[\n              {\n                required: true,\n                message: item.error,\n                min: item.value === \"password\" ? 4 : undefined,\n                max: item.value === \"password\" ? 12 : undefined,\n              },\n            ]}\n          >\n            <Input\n              prefix={item.value === \"password\" ? <LockOutlined /> : <UserOutlined />}\n              type={item.type}\n              placeholder={item.placeHolder}\n            />\n          </Form.Item>\n        ))}\n\n        <Form.Item name=\"checkbox\" valuePropName=\"checked\">\n          <Checkbox>Remember Me</Checkbox>\n        </Form.Item>\n\n        <Form.Item name=\"radio\" initialValue=\"0\">\n          <Radio.Group>\n            {radioInput.map((item) => (\n              <Radio key={item.value} value={item.value}>\n                {item.name}\n              </Radio>\n            ))}\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item name=\"switch\">\n          <Switch onChange={() => setStatusSwitch(!statusSwitch)} />\n          <span style={{ marginLeft: 8 }}>{statusSwitch ? \"On\" : \"Off\"}</span>\n        </Form.Item>\n\n        <Form.Item name=\"selectBox\" initialValue={options[0]}>\n          <Select>\n            {options.map((option, index) => (\n              <Option key={index} value={option}>\n                {option}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <div className=\"button-container\">\n          <Button className=\"btn-custom cancel\" onClick={() => setOpen(false)}>\n            Cancel\n          </Button>\n          <Button className=\"btn-custom next\" htmlType=\"submit\">\n            Next\n          </Button>\n        </div>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default FormCRUD;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}